{
  "name": "openfga-vscode",
  "displayName": "OpenFGA",
  "description": "Language support for OpenFGA authorization models",
  "author": "OpenFGA",
  "icon": "./resources/openfga-icon-color.png",
  "keywords": [
    "openfga",
    "authorization",
    "fga",
    "fine-grained-authorization",
    "rebac",
    "zanzibar"
  ],
  "license": "Apache-2.0",
  "version": "0.2.10",
  "repository": {
    "type": "git",
    "url": "https://github.com/openfga/vscode-ext"
  },
  "bugs": {
    "url": "https://github.com/openfga/vscode-ext/issues"
  },
  "homepage": "https://github.com/openfga/vscode-ext#readme",
  "publisher": "openfga",
  "categories": [],
  "engines": {
    "vscode": "^1.75.0"
  },
  "main": "./client/out/extension.node",
  "browser": "./client/out/extension.browser",
  "contributes": {
    "configuration": [
      {
        "id": "openfga-vscode",
        "title": "OpenFGA VS Code",
        "properties": {
          "openfgaLanguageServer.trace.server": {
            "type": "string",
            "scope": "window",
            "enum": [
              "off",
              "messages",
              "verbose"
            ],
            "default": "off",
            "description": "Traces the communication between VS Code and the openfga language server."
          }
        }
      }
    ],
    "languages": [
      {
        "id": "openfga",
        "aliases": [
          "OpenFGA",
          "openfga"
        ],
        "extensions": [
          ".fga",
          ".openfga"
        ],
        "configuration": "./language-configuration.json"
      },
      {
        "id": "cel",
        "aliases": [
          "CEL",
          "cel"
        ]
      },
      {
        "id": "yaml-store-openfga",
        "aliases": [
          "YAML (OpenFGA)"
        ],
        "extensions": [
          ".fga.yaml",
          ".openfga.yaml"
        ]
      }
    ],
    "snippets": [
      {
        "language": "openfga",
        "path": "./snippets.json"
      }
    ],
    "grammars": [
      {
        "language": "cel",
        "scopeName": "source.cel",
        "path": "./syntaxes/cel.tmLanguage.json"
      },
      {
        "path": "./syntaxes/cel.injection.json",
        "scopeName": "cel-openfga.injection",
        "injectTo": [
          "source.openfga",
          "source.yaml-store-openfga"
        ],
        "embeddedLanguages": {
          "meta.embedded.inline.cel": "cel"
        }
      },
      {
        "language": "openfga",
        "scopeName": "source.openfga",
        "path": "./syntaxes/openfga.tmLanguage.json"
      },
      {
        "path": "./syntaxes/openfga.injection.json",
        "scopeName": "openfga-yaml.injection",
        "injectTo": [
          "source.yaml-store-openfga"
        ],
        "embeddedLanguages": {
          "meta.embedded.inline.openfga": "openfga"
        }
      },
      {
        "language": "yaml-store-openfga",
        "scopeName": "source.yaml-store-openfga",
        "path": "./syntaxes/yaml.tmLanguage.json"
      }
    ],
    "themes": [
      {
        "label": "OpenFGA Dark",
        "uiTheme": "vs-dark",
        "path": "./themes/openfga-dark.json"
      }
    ],
    "commands": [
      {
        "command": "openfga.commands.transformToJson",
        "title": "OpenFGA: Transform DSL to JSON"
      }
    ],
    "menus": {
      "commandPalette": [
        {
          "command": "openfga.commands.transformToJson",
          "when": "editorLangId == openfga"
        }
      ]
    }
  },
  "activationEvents": [
    "onLanguage:openfga",
    "onLanguage:yaml-store-openfga"
  ],
  "scripts": {
    "vscode:prepublish": "npm run compile",
    "build:vsix": "vsce package -o openfga-latest.vsix",
    "compile": "webpack",
    "watch": "webpack --watch",
    "package": "webpack --mode production --devtool hidden-source-map",
    "test-node": "sh ./scripts/e2e-node.sh",
    "test-web": "vscode-test-web --browserType=chromium --extensionDevelopmentPath=. --extensionTestsPath=./client/out/test/index.browser.js ./client/testFixture",
    "test-web-headless": "vscode-test-web --browserType=chromium --headless --extensionDevelopmentPath=. --extensionTestsPath=./client/out/test/index.browser.js ./client/testFixture",
    "test": "npm run test-node && npm run test-web-headless",
    "lint": "eslint ./client/src ./server/src --ext .ts,.tsx",
    "format:fix": "npx prettier --write .",
    "postinstall": "cd client && npm install && cd ../server && npm install && cd .."
  },
  "devDependencies": {
    "@types/mocha": "^10.0.3",
    "@types/node": "^20.8.10",
    "@types/webpack-env": "^1.18.3",
    "@typescript-eslint/eslint-plugin": "^6.9.1",
    "@typescript-eslint/parser": "^6.9.1",
    "@vscode/test-web": "^0.0.48",
    "@vscode/vsce": "^2.22.0",
    "assert-browserify": "^2.0.0",
    "eslint": "^8.52.0",
    "eslint-config-prettier": "^9.0.0",
    "eslint-plugin-import": "^2.29.0",
    "mocha": "^10.2.0",
    "path-browserify": "^1.0.1",
    "prettier": "^3.0.3",
    "process": "^0.11.10",
    "ts-loader": "^9.5.0",
    "webpack": "^5.89.0",
    "webpack-cli": "^5.1.4"
  }
}
